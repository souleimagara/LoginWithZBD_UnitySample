//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.LoginServer"/> </summary
    public sealed class LoginServerClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public LoginServerClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "LoginServer";
            }
        }
        
        /// <summary>
        /// Call the GenerateOauthUrl method on the LoginServer microservice
        /// <see cref="Beamable.Microservices.LoginServer.GenerateOauthUrl"/>
        /// </summary>
        public Beamable.Common.Promise<string> GenerateOauthUrl()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("LoginServer", "GenerateOauthUrl", serializedFields);
        }
        
        /// <summary>
        /// Call the ContinueLogin method on the LoginServer microservice
        /// <see cref="Beamable.Microservices.LoginServer.ContinueLogin"/>
        /// </summary>
        public Beamable.Common.Promise<string> ContinueLogin(string url, long beamableid)
        {
            object raw_url = url;
            object raw_beamableid = beamableid;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("url", raw_url);
            serializedFields.Add("beamableid", raw_beamableid);
            return this.Request<string>("LoginServer", "ContinueLogin", serializedFields);
        }
        
        /// <summary>
        /// Call the GetplayerStats method on the LoginServer microservice
        /// <see cref="Beamable.Microservices.LoginServer.GetplayerStats"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetplayerStats(long userid)
        {
            object raw_userid = userid;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("userid", raw_userid);
            return this.Request<string>("LoginServer", "GetplayerStats", serializedFields);
        }
        
        /// <summary>
        /// Call the CheckTokenStatus method on the LoginServer microservice
        /// <see cref="Beamable.Microservices.LoginServer.CheckTokenStatus"/>
        /// </summary>
        public Beamable.Common.Promise<string> CheckTokenStatus(long userId, bool isTesting)
        {
            object raw_userId = userId;
            object raw_isTesting = isTesting;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("userId", raw_userId);
            serializedFields.Add("isTesting", raw_isTesting);
            return this.Request<string>("LoginServer", "CheckTokenStatus", serializedFields);
        }
        
        /// <summary>
        /// Call the Logout method on the LoginServer microservice
        /// <see cref="Beamable.Microservices.LoginServer.Logout"/>
        /// </summary>
        public Beamable.Common.Promise<string> Logout(long userId)
        {
            object raw_userId = userId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("userId", raw_userId);
            return this.Request<string>("LoginServer", "Logout", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersLoginServerClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Boolean : MicroserviceClientDataWrapper<bool>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForLoginServerClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<LoginServerClient>();
        }
        
        public static LoginServerClient LoginServer(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<LoginServerClient>();
        }
    }
}
